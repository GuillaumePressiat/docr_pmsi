searchState.loadedDescShard("pmsi_rust", 0, "pmsi_rust: <em>du PMSi avec Rust</em>\npmsi_rust en ligne de commande\nCœur de pmsi_rust\nDévelopements annexes sur les objets PMSi\npmsi_rust CLI ; en ligne de commande\nSpécifique aux formats du MCO (partie variable rsa ou rum)\nNoyau de paramètres PMSi\nFonction de découpage générique d’un fichier PMSI …\nFonction de découpage générique d’un fichier tra PMSI\nPMSi Frames et noyau de paramètres\nBoite à outils\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFonction de découpage des RSA\nFonction de découpage des RSS / RUM\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nModule pour générer les formats de découpage\nModule pour les entrées / sorties\nFonction de découpage d’une colonne à largeur fixe\nObtenir un pattern (regexp)\nObtenir les positions des champs (pour fwf)\nObtenir les noms des champs (pour fwf)\nObtenir les positions des champs (pour fwf)\nObtenir les types des champs (pour fwf)\nExtension d’un fichier\nObtenir les formats d’une table pour une année et un …\nObtenir un pattern (curseur)\nutile pour convertir une série pola.rs en vecteur typé\nCorrespondance entre l’extension du fichier et le format …\nOptions de formattage pola.rs fixées par défaut\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nImporter un fichier pmsi en une seule colonne l dans un …\nécrire un LazyFrame (rum partie fixe, ano, rsa partie …\nécrire un hashmap de  LazyFrame (rum, rsa) vers des …\nMoteur de requêtage des données PMSI\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")